Attack_name: 'Subvert Trust Controls: Install Root Certificate'
Attack_description: |-
  Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.

  Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.(Citation: Operation Emmental)

  Atypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.(Citation: Kaspersky Superfish)

  Root certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.(Citation: SpectorOps Code Signing Dec 2017)

  In macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.(Citation: objective-see ay mami 2018)
guid: ca20a3f1-42b5-4e21-ad3f-1049199ec2e0
name: Add Root Certificate to CurrentUser Certificate Store
tactic:
  - defense-evasion
technique:
  - T1553.004
os:
  - windows
description: |
  The following Atomic test simulates adding a generic non-malicious certificate to the CurrentUser certificate store. This behavior generates a registry modification that adds the cloned root CA certificate in the keys outlined in the blog.
  Keys will look like - \SystemCertificates\CA\Certificates or \SystemCertificates\Root\Certificates
  Reference: https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec
executor: powershell
sigma: true
sigma_rule:
  - id: 9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d
    name: proc_creation_win_susp_web_request_cmd.yml
  - id: 1139d2e2-84b1-4226-b445-354492eba8ba
    name: posh_ps_web_request.yml
  - id: 635dbb88-67b3-4b41-9ea5-a3af2dd88153
    name: net_connection_win_binary_github_com.yml
  - id: 1f21ec3f-810d-4b0e-8045-322202e22b4b
    name: net_connection_win_powershell_network_connection.yml
  - id: d223b46b-5621-4037-88fe-fda32eead684
    name: registry_set_install_root_or_ca_certificat.yml
  - id: 8d31a8ce-46b5-4dd6-bdc3-680931f1db86
    name: posh_pm_bad_opsec_artifacts.yml
