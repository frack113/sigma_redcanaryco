Attack_name: Direct Volume Access
Attack_description: |-
  Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique bypasses Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)

  Utilities, such as NinjaCopy, exist to perform these actions in PowerShell. (Citation: Github PowerSploit Ninjacopy)
guid: 88f6327e-51ec-4bbf-b2e8-3fea534eab8b
name: Read volume boot sector via DOS device path (PowerShell)
tactic:
  - defense-evasion
technique:
  - T1006
os:
  - windows
description: |-
  This test uses PowerShell to open a handle on the drive volume via the `\\.\` [DOS device path specifier](https://docs.microsoft.com/en-us/dotnet/standard/io/file-path-formats#dos-device-paths) and perform direct access read of the first few bytes of the volume.
  On success, a hex dump of the first 11 bytes of the volume is displayed.

  For a NTFS volume, it should correspond to the following sequence ([NTFS partition boot sector](https://en.wikipedia.org/wiki/NTFS#Partition_Boot_Sector_(VBR))):
  ```
             00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F

  00000000   EB 52 90 4E 54 46 53 20 20 20 20                 Ã«R?NTFS
  ```
sigma: false
sigma_rule: []
