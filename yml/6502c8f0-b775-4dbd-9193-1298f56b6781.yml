Attack_name: 'OS Credential Dumping: LSASS Memory'
Attack_description: |
  Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).

  As well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.

  For example, on the target host use procdump:

  * <code>procdump -ma lsass.exe lsass_dump</code>

  Locally, mimikatz can be run using:

  * <code>sekurlsa::Minidump lsassdump.dmp</code>
  * <code>sekurlsa::logonPasswords</code>

  Built-in Windows tools such as comsvcs.dll can also be used:

  * <code>rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)


  Windows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)

  The following SSPs can be used to access credentials:

  * Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.
  * Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)
  * Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.
  * CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)
guid: 6502c8f0-b775-4dbd-9193-1298f56b6781
name: Dump LSASS.exe Memory using Out-Minidump.ps1
tactic:
  - credential-access
technique:
  - T1003.001
os:
  - windows
description: |
  The memory of lsass.exe is often dumped for offline credential theft attacks. This test leverages a pure
  powershell implementation that leverages the MiniDumpWriteDump Win32 API call.
  Upon successful execution, you should see the following file created $env:SYSTEMROOT\System32\lsass_*.dmp.
executor: powershell
sigma: true
sigma_rule:
  - id: b2815d0d-7481-4bf0-9b6c-a4c48a94b349
    name: proc_creation_win_susp_powershell_getprocess_lsass.yml
  - id: a642964e-bead-4bed-8910-1bb4d63e3b4d
    name: proc_creation_win_mimikatz_command_line.yml
  - id: 8ff28fdd-e2fa-4dfa-aeda-ef3d61c62090
    name: posh_pm_susp_invocation_specific.yml
  - id: ae7fbf8e-f3cb-49fd-8db4-5f3bed522c71
    name: posh_ps_susp_invocation_specific.yml
  - id: 402e1e1d-ad59-47b6-bf80-1ee44985b3a7
    name: posh_ps_shellintel_malicious_commandlets.yml
  - id: 89819aa4-bbd6-46bc-88ec-c7f7fe30efa6
    name: posh_ps_malicious_commandlets.yml
  - id: 84c174ab-d3ef-481f-9c86-a50d0b8e3edb
    name: posh_ps_susp_getprocess_lsass.yml
  - id: 03d83090-8cba-44a0-b02f-0b756a050306
    name: posh_ps_accessing_win_api.yml
  - id: f62176f3-8128-4faa-bf6c-83261322e5eb
    name: posh_ps_malicious_keywords.yml
  - id: 32d0d3e2-e58d-4d41-926b-18b520b2b32d
    name: proc_access_win_cred_dump_lsass_access.yml
  - id: 5e3d3601-0662-4af0-b1d2-36a05e90c40a
    name: file_event_win_lsass_memory_dump_file_creation.yml
  - id: 0e277796-5f23-4e49-a490-483131d4f6e1
    name: image_load_susp_dbghelp_dbgcore_load.yml
