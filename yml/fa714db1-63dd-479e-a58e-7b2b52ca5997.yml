Attack_name: 'Credentials from Password Stores: Windows Credential Manager'
Attack_description: |-
  Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)

  The Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.

  Credential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\Users\\[Username]\AppData\Local\Microsoft\\[Vault/Credentials]\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.(Citation: passcape Windows Vault)(Citation: Malwarebytes The Windows Vault)

  Adversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)

  Adversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the “Back up...” button on the “Stored User Names and Passwords” GUI.

  Password recovery tools may also obtain plain text passwords from the Credential Manager.(Citation: Malwarebytes The Windows Vault)
guid: fa714db1-63dd-479e-a58e-7b2b52ca5997
name: WinPwn - Loot local Credentials - Invoke-WCMDump
tactic:
  - credential-access
technique:
  - T1555.004
os:
  - windows
description: Loot local Credentials - Invoke-WCMDump technique via function of WinPwn
executor: powershell
sigma: true
sigma_rule:
  - id: 85b0b087-eddf-4a2b-b033-d771fa2b9775
    name: proc_creation_win_powershell_download_iex.yml
  - id: 9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d
    name: proc_creation_win_susp_web_request_cmd_and_cmdlets.yml
  - id: e6c54d94-498c-4562-a37c-b469d8e9a275
    name: proc_creation_win_powershell_susp_download_patterns.yml
  - id: 3b6ab547-8ec2-4991-b9d2-2b06702a48d7
    name: proc_creation_win_powershell_download_patterns.yml
  - id: 6e897651-f157-4d8f-aaeb-df8151488385
    name: proc_creation_win_powershell_download_cradles.yml
  - id: ae7fbf8e-f3cb-49fd-8db4-5f3bed522c71
    name: posh_ps_susp_invocation_specific.yml
  - id: 1139d2e2-84b1-4226-b445-354492eba8ba
    name: posh_ps_web_request_cmd_and_cmdlets.yml
  - id: 8ff28fdd-e2fa-4dfa-aeda-ef3d61c62090
    name: posh_pm_susp_invocation_specific.yml
  - id: 03d83090-8cba-44a0-b02f-0b756a050306
    name: posh_ps_accessing_win_api.yml
  - id: e4a74e34-ecde-4aab-b2fb-9112dd01aed0
    name: file_event_win_csharp_compile_artefact.yml
  - id: dcaa3f04-70c3-427a-80b4-b870d73c94c4
    name: proc_creation_win_csc_susp_folder.yml
  - id: 8d31a8ce-46b5-4dd6-bdc3-680931f1db86
    name: posh_pm_bad_opsec_artifacts.yml
