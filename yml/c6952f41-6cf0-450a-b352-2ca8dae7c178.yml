Attack_name: Process Injection
Attack_description: "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code
  in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution
  via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of
  which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment
  modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. "
guid: c6952f41-6cf0-450a-b352-2ca8dae7c178
name: Section View Injection
tactic:
  - defense-evasion
  - privilege-escalation
technique:
  - T1055
os:
  - windows
description: "This test creates a section object in the local process followed by a local section view.\nThe shellcode is copied into the local section view and a remote section view is created in the target
  process, pointing to the local section view. \nA thread is then created in the target process, using the remote section view as start address.\n"
executor: powershell
sigma: true
sigma_rule:
  - id: a1a144b7-5c9b-4853-a559-2172be8d4a03
    name: create_remote_thread_win_uncommon_target_image.yml
  - id: a1a144b7-5c9b-4853-a559-2172be8d4a03
    name: create_remote_thread_win_uncommon_target_image.yml
