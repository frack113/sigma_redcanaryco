Attack_name: Obfuscated Files or Information
Attack_description: "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This\
  \ is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may\
  \ be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)\
  \ for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.\
  \ (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that\
  \ would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality\
  \ when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).\
  \ Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation\
  \ June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) "
guid: 8b3f4ed6-077b-4bdd-891c-2d237f19410f
name: Obfuscated Command in PowerShell
tactic:
  - defense-evasion
technique:
  - T1027
os:
  - windows
description: 'This is an obfuscated PowerShell command which when executed prints "Hello, from PowerShell!". Example is from the 2021 Threat Detection Report by Red Canary.

  '
sigma: true
sigma_rule:
  - id: d7bcd677-645d-4691-a8d4-7a5602b780d1
    name: win_powershell_cmdline_special_characters.yml
  - id: f4bbd493-b796-416e-bbf2-121235348529
    name: win_non_interactive_powershell.yml
  - id: bb780e0c-16cf-4383-8383-1e5471db6cf9
    name: win_powershell_xor_commandline.yml
