Attack_name: Malicious File
Attack_description: |-
  An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.

  Adversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) on the file to increase the likelihood that a user will open it.

  While [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).
guid: 5202ee05-c420-4148-bf5e-fd7f7d24850c
name: Office Generic Payload Download
tactic:
  - execution
technique:
  - T1204.002
os:
  - windows
description: |
  This Test uses a VBA macro to launch Powershell which will download a file from a user defined web server.
  Required input agruments are c2_domain and file_name
  Execution is handled by [Invoke-MalDoc](https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1204.002/src/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.
  Example for c2 server located at 127.0.0.1 for the file test.txt which is nested below the parent directory in the tests/my-test folder
  Example input args for file in root directory c2-domain = 127.0.0.1, file-name = test.txt
executor: powershell
sigma: true
sigma_rule:
  - id: f4bbd493-b796-416e-bbf2-121235348529
    name: proc_creation_win_non_interactive_powershell.yml
  - id: 9fc51a3c-81b3-4fa7-b35f-7c02cf10fd2d
    name: proc_creation_win_susp_web_request_cmd.yml
  - id: 754ed792-634f-40ae-b3bc-e0448d33f695
    name: proc_creation_win_susp_powershell_parent_process.yml
  - id: 1139d2e2-84b1-4226-b445-354492eba8ba
    name: posh_ps_web_request.yml
  - id: b8af5f36-1361-4ebe-9e76-e36128d947bf
    name: posh_ps_remove_item_path.yml
  - id: a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd
    name: sysmon_reg_office_security.yml
  - id: 635dbb88-67b3-4b41-9ea5-a3af2dd88153
    name: sysmon_win_binary_github_com.yml
  - id: 1f21ec3f-810d-4b0e-8045-322202e22b4b
    name: sysmon_powershell_network_connection.yml
  - id: e6ce8457-68b1-485b-9bdd-3c2b5d679aa9
    name: sysmon_susp_winword_vbadll_load.yml
  - id: 438025f9-5856-4663-83f7-52f878a70a50
    name: proc_creation_win_office_shell.yml
  - id: 64e8e417-c19a-475a-8d19-98ea705394cc
    name: posh_pm_alternate_powershell_hosts.yml
  - id: 64e8e417-c19a-475a-8d19-98ea705394cc
    name: posh_pm_alternate_powershell_hosts.yml
  - id: 0e277796-5f23-4e49-a490-483131d4f6e1
    name: sysmon_suspicious_dbghelp_dbgcore_load.yml
