Attack_name: 'Account Manipulation: Additional Cloud Roles'
Attack_description: "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies
  in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365
  Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to
  reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136)
  or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation,
  particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code>
  API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security
  Labs AWS Privilege Escalation)"
guid: 14f3af20-61f1-45b8-ad31-4637815f3f44
name: Simulate - Post BEC persistence via user password reset followed by user added to company administrator role
tactic:
  - persistence
  - privilege-escalation
technique:
  - T1098.003
os:
  - azure-ad
description: |
  This test looks at simulating the an adversary described in the following blog post. It involves resetting the password of a normal user and adding to the company administrator role within M365.
   Reference: https://www.huntress.com/blog/business-email-compromise-via-azure-administrative-privileges
executor: powershell
sigma: false
sigma_rule: []
